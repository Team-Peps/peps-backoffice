name: Build, Push & Deploy Angular Backoffice

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy to"
                required: true
                default: "dev"
                type: choice
                options:
                    - dev
                    - prod
    push:
        branches:
            - dev


env:
    IMAGE_NAME: serkox/peps-backoffice

jobs:
    build-push:
        runs-on: ubuntu-latest
        outputs:
            image_tag: ${{ steps.generate-tag.outputs.tag }}

        steps:
            - name: 🧾 Checkout code
              uses: actions/checkout@v3

            - name: 🧰 Set up Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: 📦 Install dependencies
              run: npm install

            - name: 🛠️ Build Angular App
              run: npm run build

            - name: 🏷️ Generate tag from commit
              id: generate-tag
              run: |
                  echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - name: 🔐 Docker login
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: 🐳 Build Docker image
              run: |
                  docker build -t $IMAGE_NAME:${{ steps.generate-tag.outputs.tag }} .
                  docker tag $IMAGE_NAME:${{ steps.generate-tag.outputs.tag }} $IMAGE_NAME:latest

            - name: 📤 Push Docker image
              run: |
                  docker push $IMAGE_NAME:${{ steps.generate-tag.outputs.tag }}
                  docker push $IMAGE_NAME:latest

    deploy:
        needs: build-push
        runs-on: ubuntu-latest
        environment: ${{ github.event_name == 'push' && 'dev' || github.event.inputs.environment }}

        steps:
            - name: 🧾 Checkout code
              uses: actions/checkout@v3

            -   name: 📦 Définir les variables selon l’environnement
                id: set-vars
                run: |
                    if [ "${{ job.environment }}" = "prod" ]; then
                        echo "release_name=peps-backoffice-prod" >> $GITHUB_OUTPUT
                        echo "namespace=peps-prod" >> $GITHUB_OUTPUT
                        echo "values_file=values-prod.yaml" >> $GITHUB_OUTPUT
                    else
                        echo "release_name=peps-backoffice-dev" >> $GITHUB_OUTPUT
                        echo "namespace=peps-dev" >> $GITHUB_OUTPUT
                        echo "values_file=values-dev.yaml" >> $GITHUB_OUTPUT
                    fi

            - name: ⚙️ Set up kubectl
              uses: azure/setup-kubectl@v3

            - name: ⚙️ Set up Helm
              uses: azure/setup-helm@v3

            - name: 📄 Configure kubeconfig
              run: |
                  mkdir -p ~/.kube
                  echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

            - name: 🚀 Deploy with Helm
              run: |
                  helm upgrade --install ${{ steps.set-vars.outputs.release_name }} ./deploy \
                    --namespace ${{ steps.set-vars.outputs.namespace }} \
                    --set image.repository=${{ env.IMAGE_NAME }} \
                    --set image.tag=${{ needs.build-push.outputs.image_tag }} \
                    -f deploy/${{ steps.set-vars.outputs.values_file }}
