name: Build, Push & Deploy Angular Backoffice

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environnement à déployer"
                required: true
                default: "prod"
                type: choice
                options:
                    - prod
                    - dev
    push:
        branches:
            - '**'
        tags-ignore:
            - '*'

env:
    IMAGE_NAME: docker.io/serkox/peps-backoffice

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:

    set-environment:
        runs-on: ubuntu-latest
        outputs:
            environment: ${{ steps.set-env.outputs.environment }}
            branch_name: ${{ steps.set-env.outputs.branch_name }}
        steps:
            -   name: 🧠 Définition de l’environnement
                id: set-env
                run: |
                    BRANCH_NAME="${GITHUB_REF##*/}"

                    if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                      ENVIRONMENT="${{ github.event.inputs.environment }}"
                    else
                      ENVIRONMENT="dev"
                    fi

                    echo "Branche : $BRANCH_NAME | Environnement : $ENVIRONMENT"
                    echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
                    echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

    build-push:
        runs-on: ubuntu-latest
        needs: set-environment
        outputs:
            image_tag: ${{ steps.generate-tag.outputs.tag }}
        env:
            ENVIRONMENT: ${{ needs.set-environment.outputs.environment }}

        steps:
            -   name: 🔄 Checkout du code (Push ou Tag manuel)
                uses: actions/checkout@v4
                with:
                    ref: ${{ github.event.inputs.git_tag || github.ref }}
                    fetch-depth: 0

            - name: 🧰 Configuration de node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: 📦 Installation des dépendances
              run: npm install

            - name: 🛠️ Construction de l’application
              run: npm run build:$ENVIRONMENT

            - name: 🔖 Génération du tag de l’image Docker
              id: generate-tag
              run: |
                  BRANCH=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-')
                  DATE=$(date -u +"%Y%m%d_%H%M")
                  TAG="$BRANCH-$DATE"
                  echo "Docker tag généré : $TAG"
                  echo "tag=$TAG" >> $GITHUB_OUTPUT

            - name: 🔐 Connexion à Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: 🐳 Construction et push de l’image Docker
              run: |
                  docker build --build-arg ENV=$ENVIRONMENT -t ${{ env.IMAGE_NAME }}:${{ steps.generate-tag.outputs.tag }} .
                  docker push ${{ env.IMAGE_NAME }}:${{ steps.generate-tag.outputs.tag }}

    deploy:
        needs: [build-push, set-environment]
        runs-on: ubuntu-latest
        environment: ${{ needs.set-environment.outputs.environment }}
        env:
            ENVIRONMENT: ${{ needs.set-environment.outputs.environment }}

        steps:
            - name: 🔄 Checkout du code (Push ou Tag manuel)
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.inputs.git_tag || github.ref }}
                  fetch-depth: 0

            -   name: 📦 Définition des variables selon l’environnement
                id: set-vars
                run: |
                    if [ "$ENVIRONMENT" = "prod" ]; then
                        echo "release_name=peps-backoffice-prod" >> $GITHUB_OUTPUT
                        echo "namespace=peps-prod" >> $GITHUB_OUTPUT
                        echo "values_file=values-prod.yaml" >> $GITHUB_OUTPUT
                    else
                        echo "release_name=peps-backoffice-dev" >> $GITHUB_OUTPUT
                        echo "namespace=peps-dev" >> $GITHUB_OUTPUT
                        echo "values_file=values-dev.yaml" >> $GITHUB_OUTPUT
                    fi

            -   name: ⚙️ Installation de kubectl
                uses: azure/setup-kubectl@v3

            -   name: ⚙️ Installation de Helm
                uses: azure/setup-helm@v3

            -   name: 📄 Configuration de kubectl
                run: |
                    mkdir -p ~/.kube
                    echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

            - name: 🚀 Déploiement avec Helm
              run: |
                  helm upgrade --install ${{ steps.set-vars.outputs.release_name }} ./deploy \
                    --namespace ${{ steps.set-vars.outputs.namespace }} \
                    --set image.repository=${{ env.IMAGE_NAME }} \
                    --set image.tag=${{ needs.build-push.outputs.image_tag }} \
                    -f deploy/${{ steps.set-vars.outputs.values_file }}

    notify-discord:
        needs: [deploy, set-environment, build-push]
        environment: ${{ needs.set-environment.outputs.environment }}
        runs-on: ubuntu-latest
        env:
            ENVIRONMENT: ${{ needs.set-environment.outputs.environment }}
            TAG: ${{ needs.build-push.outputs.image_tag }}
        steps:
            - name: 📣 Envoi d'une notification Discord
              run: |
                  curl -H "Content-Type: application/json" \
                  -X POST \
                  -d '{
                    "username": "Team Peps CI/CD",
                    "embeds": [{
                      "title": "✅ Nouvelle version déployée en '"$ENVIRONMENT"'",
                      "description": "**Back Office**\n**Branche :** ${{ needs.set-environment.outputs.branch_name }}\n**Image tag :** '"$TAG"'\n[Voir le commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n\n**Auteur :** ${{ github.actor }}",
                      "color": 5814783
                    }]
                  }' ${{ secrets.DISCORD_WEBHOOK_URL }}
